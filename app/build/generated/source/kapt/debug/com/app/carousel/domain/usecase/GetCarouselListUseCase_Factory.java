// Generated by Dagger (https://dagger.dev).
package com.app.carousel.domain.usecase;

import com.app.carousel.domain.respository.CarouselRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class GetCarouselListUseCase_Factory implements Factory<GetCarouselListUseCase> {
  private final Provider<CarouselRepository> carouselRepositoryProvider;

  public GetCarouselListUseCase_Factory(Provider<CarouselRepository> carouselRepositoryProvider) {
    this.carouselRepositoryProvider = carouselRepositoryProvider;
  }

  @Override
  public GetCarouselListUseCase get() {
    return newInstance(carouselRepositoryProvider.get());
  }

  public static GetCarouselListUseCase_Factory create(
      Provider<CarouselRepository> carouselRepositoryProvider) {
    return new GetCarouselListUseCase_Factory(carouselRepositoryProvider);
  }

  public static GetCarouselListUseCase newInstance(CarouselRepository carouselRepository) {
    return new GetCarouselListUseCase(carouselRepository);
  }
}
