// Generated by Dagger (https://dagger.dev).
package com.app.carousel.presentation;

import com.app.carousel.domain.model.CarouselBaseUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class CarouselViewModel_Factory implements Factory<CarouselViewModel> {
  private final Provider<CarouselBaseUseCase> carouselBaseUseCaseProvider;

  public CarouselViewModel_Factory(Provider<CarouselBaseUseCase> carouselBaseUseCaseProvider) {
    this.carouselBaseUseCaseProvider = carouselBaseUseCaseProvider;
  }

  @Override
  public CarouselViewModel get() {
    return newInstance(carouselBaseUseCaseProvider.get());
  }

  public static CarouselViewModel_Factory create(
      Provider<CarouselBaseUseCase> carouselBaseUseCaseProvider) {
    return new CarouselViewModel_Factory(carouselBaseUseCaseProvider);
  }

  public static CarouselViewModel newInstance(CarouselBaseUseCase carouselBaseUseCase) {
    return new CarouselViewModel(carouselBaseUseCase);
  }
}
