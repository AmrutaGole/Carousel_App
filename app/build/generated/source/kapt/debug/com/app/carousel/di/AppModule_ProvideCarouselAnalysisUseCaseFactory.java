// Generated by Dagger (https://dagger.dev).
package com.app.carousel.di;

import com.app.carousel.domain.usecase.GetCarouselAnalysisUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideCarouselAnalysisUseCaseFactory implements Factory<GetCarouselAnalysisUseCase> {
  @Override
  public GetCarouselAnalysisUseCase get() {
    return provideCarouselAnalysisUseCase();
  }

  public static AppModule_ProvideCarouselAnalysisUseCaseFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static GetCarouselAnalysisUseCase provideCarouselAnalysisUseCase() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideCarouselAnalysisUseCase());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideCarouselAnalysisUseCaseFactory INSTANCE = new AppModule_ProvideCarouselAnalysisUseCaseFactory();
  }
}
